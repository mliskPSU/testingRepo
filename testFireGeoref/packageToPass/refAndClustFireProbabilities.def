# A singularity container to run the code to compute the warping of
# non-georeferenced images and applying the fitted SOM clustering for the
# fire probability maps
# created by Matthew D. Lisk : 1/21/2022

# load the singularity OS
Bootstrap: library
From: ubuntu:20.04

%environment
    # adds a 'header' to the beginning of each console command line, to more
    # easily recognize when the container is being used
    #SINGULARITYENV_PS1='\n\[\033[01;33m\][`basename ${SINGULARITY_CONTAINER} .simg`]\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\] \$ '

%files

%post
    # setting up environmental variables for the installation process
    DEBIAN_FRONTEND=noninteractive

    # set up the locations in which to download software from
    echo "deb http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse" > /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://us.archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse" >> /etc/apt/sources.list
    #echo "deb-src ftp://ftp.de.debian.org/debian/ stable main contrib" >> /etc/apt/sources.list

    # Update system and install packages
    apt-get -q update

    apt-get install -qy build-essential make proj-bin libproj-dev gdal-bin \
      libgeos-dev proj-data libudunits2-dev libx11-dev libgl1-mesa-dev \
      libglu1-mesa-dev libxt-dev libfreetype6-dev libnode-dev libfftw3-dev \
      r-base-core software-properties-common dirmngr apt-transport-https \
      lsb-release ca-certificates mlocate wget vim git libcurl4-openssl-dev

    # installing ImageMagick from source, as the latest version is not available
    # from a Ubuntu server
    apt-get install -y checkinstall #libjasper-dev
    ##get jasper, a dependency
    #git clone https://github.com/jasperproject/jasper-client.git jasper && \
 		#             chmod +x jasper/jasper.py && \
		#             pip install --upgrade setuptools && \
		#             pip install -r jasper/client/requirements.txt

    apt-get build-dep imagemagick -y

    mkdir $HOME/imagemagick_build && cd $HOME/imagemagick_build
    wget https://download.imagemagick.org/ImageMagick/download/ImageMagick-7.1.0-22.tar.gz
    tar xzvf ImageMagick-7.1.0-22.tar.gz && cd ImageMagick-7.1.0-22
    ./configure
    make
    checkinstall
    ldconfig /usr/local/lib

    # Install R packages and dependencies
    R -e "install.packages('remotes', dependencies=T)"
    R -e "install.packages('rgdal', dependencies=T)"
    R -e "install.packages('sp', dependencies=T)"
    R -e "install.packages('raster', dependencies=T)"
    R -e "install.packages('kohonen', dependencies=T)"
    R -e "remotes::install_github('https://github.com/ericphillips99/bingmapr')"
    R -e "Sys.setenv(api_key='AoIPzpMw8opRk9fRrihF1YHgDMxNtrLUeL_E5K5qtWPfxFXpd5Gqcq1Fsa-3os0-')"
